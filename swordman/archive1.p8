pico-8 cartridge // http://www.pico-8.com
version 32
__lua__
o={}
btnpress={}

function _init()
	local p={}
	p.x=0
	p.y=0
	p.dx=0
	p.dy=0
	p.dir=true
	p.timer=0
	p.spr=0
	p.animoffset=0
	
	p.update=pnormal
	p.draw=pdraw
	add(o,p)
	
	animspeed=4
	
	jumpforce=2.8
	gravity=0.15
	acc=0.1
	friction=0.9
	
	initmapemitters(0,0)
	
	for i=0,5 do
		btnpress[i]=0
	end
end

function _update60()
	updbtnpress()
	for k,v in pairs(o) do
		v.update(v)
	end
	animatelava()
end

function _draw()
	cls(14)
	local camx=peek2(0x5f28)
	local camy=peek2(0x5f2a)
	local mapx=camx/8
	map(mapx,0,camx,0,16,16)
	for k,v in pairs(o) do
		v.draw(v)
	end
	map(mapx,0,camx,0,16,16,2)
	drawlogs()
end

function drawspri(x,y,spri,flp)
	for i=0,15 do
		pal(i,0)
	end
	clip(0,0,127,y+8)
	spr(spri,x+1,y,1,1,flp,false)
	spr(spri,x-1,y,1,1,flp,false)
	spr(spri,x,y+1,1,1,flp,false)
	spr(spri,x,y-1,1,1,flp,false)
	resetpal()
	clip()
	spr(spri,x,y,1,1,flp,false)
end

function solidarea(x,y)
	if (issolid(x,y)) return true
	if (issolid(x+7,y)) return true
	if (issolid(x,y+7)) return true
	if (issolid(x+7,y+7)) return true
	return false
end

function issolid(x,y)
	return fget(mget(x/8,y/8),0)
end

function isgrounded(x,y)
	if (issolid(x,y+8)) return true
	if (issolid(x+7,y+8)) return true
	return false
end

function resetpal()
	pal()
	pal(14,128,1)
	pal(3,131,1)
	pal(4,132,1)
	pal(11,133,1)
end

function randchance(t)
	return flr(rnd(t))==0
end

function updbtnpress()
	for i=0,5 do
		if btnpress[i]==0 then
			if btn(i) then
				btnpress[i]=1
			end
		elseif btnpress[i]==1 then
			if not btn(i) then
				btnpress[i]=0
			else
				btnpress[i]=2
			end
		else
			if not btn(i) then
				btnpress[i]=0
			end
		end
	end
end

function btnd(i)
	return btnpress[i]==1
end

function null()
end




-->8
--player
function pphys(p)
	--x-axis collision
	for i=p.x+p.dx,p.x,-(p.dx/abs(p.dx)) do
		if (not solidarea(i,p.y)) then
			p.x=i
			break
		end
	end
	p.dx*=friction;
	
	--y-axis collision
	for i=p.y+p.dy,p.y,-(p.dy/abs(p.dy)) do
		if (not solidarea(p.x,i)) then
			p.y=i
			break
		end
		if (abs(i-p.y)<2) then
			p.dy=0
		end
	end
	
	--gravity
	p.dy+=gravity;
	
	local camx=peek(0x5f28)
	local pmappos=flr(p.x/128)*128
	if camx!=pmappos then
		camera(pmappos,0)
	end
end

function pnormal(p)
	pphys(p)
	--x-axis input
	if (btn(0)) then
		p.dir=true
		if (not btn(3)) then
			p.dx-=acc;
		end
	end
	if (btn(1)) then
		p.dir=false
		if (not btn(3)) then
			p.dx+=acc;
		end
	end
	
	local pspeed=abs(p.dx)
	if isgrounded(p.x,p.y) and pspeed>0.2 then
		if (randchance(10)) then
			partatp(p,-p.dx/10,-pspeed/5,20,7)
		end
	end

	--jump
	if btnd(2) and isgrounded(p.x,p.y) then
		p.dy=-jumpforce;
		partatp(p,-0.3,-0.25,10,7)
		partatp(p,0.25,-0.2,10,7)
		partatp(p,-0.5,0,10,7)
		partatp(p,0.5,0,10,7)
	end
	
	
	if btnd(4) then 
		p.update=pattack
		p.timer=animspeed*4
	end
end

function pattack(p)
	pphys(p)
	p.timer-=1
	p.spr=6
	p.animoffset=1
	if (p.timer<=animspeed*3) then
		p.spr=7
		p.animoffset=2
	end
	if (p.timer<=animspeed*2) then
		p.spr=8
		p.animoffset=4
	end
	if (p.timer<=animspeed) then
		p.spr=9
		p.animoffset=4
	end
	if (p.timer<=0) then
		p.update=pnormal
		local newx=p.x+2*dirtoi(p.dir)
		if not solidarea(newx,p.y) then
			p.x=newx
		end
		p.spr=0
		p.animoffset=0
	end
end

function pdraw(p)
	if (p.spr==0) then
		local spri = flr(time()*6)%3+1
		if (isgrounded(p.x,p.y)) then
			if btn(3) then 
				spri=5
			elseif abs(p.dx)>0.1 then
				local val=flr(time()*6)%4
				if val==0 then
					spri=1
				elseif val==1 then
					spri=10
				elseif val==2 then
					spri=11
				elseif val==3 then
					spri=10
				end
			end
		else
			spri=4
		end
		drawspri(p.x,p.y,spri,p.dir)
	else
		local x=p.x+p.animoffset*dirtoi(p.dir)
		drawspri(x,p.y,p.spr,p.dir)
	end
end

function dirtoi(dir)
	if (dir) then
	 return -1
	else
	 return 1
	end
end

function partatp(p,dx,dy,t,col)
	initpart(p.x+3,p.y+7,dx,dy,t,col)
end


-->8
--particles
function initmapemitters(mx,my)
	for i=mx,mx+15 do
		for j=my,my+15 do
			local cur=mget(i,j)
			local below=mget(i,j+1)
			if cur==17 or cur==20 then
				if fget(below,0) then
					initmapemitter(i*8,j*8+8,5,4,12)
				elseif below==18 or below==22 then
					initmapemitter(i*8,j*8+13,1,10,6)
				end
			elseif cur==18 then
					initmapemitter(i*8,j*8+5,100,5,10)
					initmapemitter(i*8,j*8+5,50,5,9)
			end
		end
	end
end

function initmapemitter(x,y,f,t,col)
	local e={}
	e.x=x
	e.y=y
	e.f=f
	e.t=t
	e.col=col
	e.update=emitterupdate
	e.draw=null
	add(o,e)
end

function emitterupdate(e)
	if randchance(e.f) then
		local x=e.x+rnd(8)
		local dx=rnd(1)-0.5
		initpart(x,e.y,dx,-rnd(1),e.t,e.col)
	end
end

function initpart(x,y,dx,dy,t,col)
	local p={}
	p.x=x
	p.y=y
	p.dx=dx
	p.dy=dy
	p.t=t
	p.col=col
	
	p.update=updatepart
	p.draw=drawpart
	add(o,p)
end

function updatepart(p)
	p.x+=p.dx
	p.y+=p.dy
	p.t-=1
	if(p.t<=0) then
		del(o,p)
	end
end

function drawpart(p)
	pset(p.x,p.y,p.col)
end
-->8
--map
framecount=0
function animatelava()
	framecount+=1
	if framecount%30==0 then
		scrollsprh(18)
		scrollsprv(19,2)
	end
	scrollsprv(15,3)
	scrollsprv(17,1)
	scrollsprv(20,1)
end

function scrollsprh(spri)
	local addr=512*(spri\16)+4*(spri%16)
	for i=0,7 do
		local rowadd=addr+i*64
		local f=peek(rowadd)
		for j=0,3 do
			local cur=peek(rowadd+j)
			local nxt=peek(rowadd+j+1)
			if (j==3) nxt=f
			local lft=(cur>>4)&0x0f
			local rgt=(nxt<<4)&0xf0
			local byt=lft|rgt
			poke(rowadd+j,byt)
		end
	end
end

function scrollsprv(spri,h)
	local addr=512*(spri\16)+4*(spri%16)
	local rowcount=h*8-1
	local l=peek4(addr+rowcount*64)
	for i=rowcount,1,-1 do
		local cur=addr+i*64
		local nxt=cur-64
		poke4(cur,peek4(nxt))
	end
	poke4(addr,l)
end

function cpyspr(tar,src)
	local srcad=512*(src\16)+4*(src%16)
	local tarad=512*(tar\16)+4*(tar%16)
	for i=0,7 do
		local offset=i*64
		memcpy(tarad+offset,srcad+offset,4)
	end
end
-->8
--utility
function drawlogs()
	print("cpu use=",0,0,7)
	print(stat(1),32,0,7)
	
	print("fps=",0,6,7)
	print(stat(7),16,6,7)
	
	print("memory=",0,12,7)
	print(stat(0),28,12,7)
end
__gfx__
00000000000000000000000000000000000000000000000007600000007777700070770000000000000000000000000000000000000000000000000000010000
0000000000000ff00000000000000ff0600ff000000000007060ff000700ff070000ff700000ff700000000000000ff000000000000000000000000000010000
0070070000000ff000000ff000000ff0600ff000000ff02070f0ff000000ff060200ff070200ff0000000ff000000ff000000000000000000000000000010000
000770000000f00000000ff0000ff00006000f20000ff002700f000002ff00062f0f00072f0f000700000ff0000ff000000000000000000000000000000c0000
00077000000ffff0000ff00000f0ff0200fff02200ff00f2000fff00020ff0f020ffff6620fff007000ff00000f0ff0200000000000000000000000000000000
0070070000f0ff0200f0ff020600ff20000ff0000f0ff002002ff200020f0f0000ff000000ff0f0700f0ff020600ff2000000000000000000000000000000000
000000000600f0200600f0206000f02000f00f00600f0f00000ff000000f00000f00f0000f00f0660600f02060000f2000000000000000000000000000000000
00000000600f0020600f0020000f000000f0000060f00f0000f0f000000f00000f000f000f000f006000f020000f00f000000000000000000000000000000000
06666650100000000000000000000a98000100000000098200000000000000000000000000000000000000000000000000000000000000000000000000000000
66665555100010000000000000000898010000000000099800000000000000000000000000000000000000000000000000000000000000000000000000000000
6565655510001000000000000000098901000100000009a900000000000000000000000000000000000000000000000000000000000000000000000000000000
565655500000101000000000000009890d000100000098a900000000000000000000000000000000000000000000000000000000000000000000000000000000
65555505001000100000000000000a8900000d0000aa989800000000000000000000000000000000000000000000000000000000000000000000000000000000
55555550001000d088a98889000009990000000099a9a889000000a9000000000000000000000000000000000000000000000000000000000000000000000000
5555050500d000002988298800000989000100008898982800000a98000000000000000000000000000000000000000000000000000000000000000000000000
0550505000000000822282820000098a000100002982828900000982000000000000000000000000000000000000000000000000000000000000000000000000
06666666666666600666666000000988003030000004000003044003000000000000000000000000000000000000000000000000000000000000000000000000
66666565655555556665655500000a8830330303303b0400000b4030030003000000000000000000000000000000000000000000000000000000000000000000
6666565655555555665655550000098903033030341b0444000b4000003030300000000000000000000000000000000000000000000000000000000000000000
6665656555555555656555550000092933333333034b4403000b4000030303330000000000000000000000000000000000000000000000000000000000000000
66565555555555556655555500000888133133133103b03000444000303133130000000000000000000000000000000000000000000000000000000000000000
65655555555555556555555500000a89313313034004b01300b44000030313030000000000000000000000000000000000000000000000000000000000000000
65555555555555506555555500000a88031011300444b00000b44400031031300000000000000000000000000000000000000000000000000000000000000000
655555555555555555555555000009983103000030bb04000b44b400310313130000000000000000000000000000000000000000000000000000000000000000
65555555555555555555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555555555555505555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555555555555055555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555555555550505555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555555555505055555550500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555555505050505555505000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555555050505005555050500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05555050505050000550500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000201000200000200020002020000000002010101000102020102020200000000020101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1111141111111414111111111411111010130000000000000000000000131010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111141111111414111011111411111010230000000000000000001612152021101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111141111111414111010111411111010130000000000000000001310223031101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111141111111414111000111411112210230000000000000016121510321010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111141111111414112200111411113210130000000016121215202122101020211000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1127242411111414113200111411101010230000000023202122303132101030311000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1124252711111414110000111411001010130000000013303132100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
110f262f11111410101000111411001022230000000023000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010111400001010111411002232130000000013000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001f00002f11140000102f111411003210230000000023000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
002f00001022101220210f111416121212152200000013000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000f000000321010303110111413102021103200000023000000000000000010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
101f00000000000000000f111423003031000000000013000000000000001020211010000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
202100000000000000001f111413000000000000000023000000000000202130310010000000000000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3031000010000010000010111423202110221010202113221020211022303120210010100000101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1020121212121212121212121215303122322222303113322230312232102230310000101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010100000000000000013000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
