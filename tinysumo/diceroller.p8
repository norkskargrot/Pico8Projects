pico-8 cartridge // http://www.pico-8.com
version 34
__lua__
function _init()
	initdice(20)
end

function _update()
	updatedice()
end

function _draw()
	cls(5)
	--rect(0,0,127,127,7)
	
	drawdice()
end
-->8
--utility
function approxdist(a,b)
	local	dx,dy=b.x-a.x,b.y-a.y
 local dx0,dy0=abs(dx),abs(dy)
 return max(dx0,dy0)*0.9609+min(dx0,dy0)*0.3984
end

--credit:https://www.lexaloffle.com/bbs/?tid=38548
function rspr(x,y,rot,mx,my,w,flip,scale)
  scale=scale or 1
  w*=scale*4

  local cs, ss = cos(rot)*.125/scale,sin(rot)*.125/scale
  local sx, sy = mx+cs*-w, my+ss*-w
  local hx = flip and -w or w

  local halfw = -w
  for py=y-w, y+w do
    tline(x-hx, py, x+hx, py, sx-ss*halfw, sy+cs*halfw, cs, ss)
    halfw+=1
  end
end
-->8
--dice

--bound
dicebx1=8
diceby1=8
dicebx2=119
diceby2=119

function initdice(n)
	dice={}
	for i=1,n do
		local die={}
		die.x=rnd(dicebx2-dicebx1)+dicebx1
		die.y=diceby2
		die.dx=rnd(32)-16
		die.dy=-rnd(20)
		die.num=flr(rnd(6)+1)
		die.numcount=rnd(3)+3
		die.r=rnd()
		die.dr=rnd(0.1)-0.05
		die.typ=flr(rnd(4))+1
		add(dice,die)
	end
end

function updatedice()
	diesize=18
	--collisions
	for i=1,#dice do
		local d1=dice[i]
		for j=i+1,#dice do
			local d2=dice[j]
			local d=approxdist(d1,d2)
			if d<diesize then
				local dx,dy=d2.x-d1.x,d2.y-d1.y
				local f=5*(1-d/diesize)
			 d1.dx-=f*dx/d
			 d2.dx+=f*dx/d
			 d1.dy-=f*dy/d
			 d2.dy+=f*dy/d
			end
		end
	end
	
	--normal phys
	for k,v in pairs(dice) do
		local nx,ny=v.x+v.dx,v.y+v.dy
		if nx<dicebx1 or nx>dicebx2 then
			v.dx=-v.dx
		end
		if ny<diceby1 or ny>diceby2 then
			v.dy=-v.dy
		end
		v.x+=v.dx
		v.y+=v.dy
		v.dx*=0.92
		v.dy*=0.92
		
		local spd=v.dx+v.dy
		v.r+=v.dr*spd
		v.numcount-=spd
		if v.numcount<=0 then
			v.num=flr(rnd(6)+1)
			v.numcount=3
		end
	end
end

dicepals={
	{1},
	{2},
	{1,2},
	{2,3},
	{1,2,3},
	{2,3,4},
}

dicecols={
	{7,6},
	{11,3},
	{8,2},
	{12,1}
}

function drawdice()
	for k,v in pairs(dice) do
		--draw into spritesheet
		poke(0x5f55,0x00)
		--blank the sprite
		rectfill(32,0,56,24,0)
	
		--shadow sides
		for i=0,15 do pal(i,13) end
		rspr(43,13,v.r,0.75,0.75,3,true)
		pal()
		
		--main face
		pal({7,7,7,7})
		for k,l in pairs(dicepals[v.num]) do
			pal(l,1)
		end
		rspr(44,12,v.r,0.75,0.75,3,true)
		
		--draw back to screen
		poke(0x5f55,0x60)
		
		local x,y=v.x-12,v.y-12
		
		--outline
		pal(7,0)
		pal(13,0)
		spr(4,x-1,y,3,3)
		spr(4,x+1,y,3,3)
		spr(4,x,y-1,3,3)
		spr(4,x,y+1,3,3)
		pal()
		
		--face
		pal(1,0)
		pal(7,dicecols[v.typ][1])
		pal(13,dicecols[v.typ][2])
		spr(4,x,y,3,3)
	end
end
__gfx__
00000000077777777770000077777770777777777777777777777777000000000000000000000000000000000000000000000000000000000000000000000000
00000000777777777777000070777070700000000000000000000007000000000000000000000000000000000000000000000000000000000000000000000000
00700700772277773377000077777770707770777077707770777007000000000000000000000000000000000000000000000000000000000000000000000000
00077000772277773377000070777070707070700070007000707007000000000000000000000000000000000000000000000000000000000000000000000000
00077000777777777777000077777770707700770077707700770007000000000000000000000000000000000000000000000000000000000000000000000000
00700700774471174477000070777070707070700000707000707007000000000000000000000000000000000000000000000000000000000000000000000000
00000000774471174477000077777770707070777077707770707007000000000000000000000000000000000000000000000000000000000000000000000000
00000000777777777777000000000000700000000000000000000007000000000000000000000000000000000000000000000000000000000000000000000000
00000000773377772277000000000000707070777077000000000007000000000000000000000000000000000000000000000000000000000000000000000000
00000000773377772277000000000000707070700070700000000007000000000000000000000000000000000000000000000000000000000000000000000000
00000000777777777777000000000000707070770070700000000007000000000000000000000000000000000000000000000000000000000000000000000000
00000000077777777770000000000000707070700070700000000007000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000700700777077700000000007000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000700000000000000000000007000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000700707700777007707770707000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000707007070070070007000077000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000707007070070070007700077000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000707007070070070007000077000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000700707770777007707770707000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000700000000000000000000007000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000700000000000000000000007000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000700000000000000000000007000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000700000000000000000000007000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000777777777777777777777777000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0102000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1112000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
